version: '3.7'
services:
  mongo:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - "27017:27017"
    volumes:
      - mongoData:/data/db
    networks:
      - nodeApp
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    volumes:
      - postgresData:/data/db
    networks:
      - nodeApp
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.0
    environment:
      - node.name=elastic
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticData:/data/
    ports:
      - "9200:9200"
    networks:
      - nodeApp
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: root
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitMqData:/data
      - rabbitMqData:/data/vendor
    networks:
      - nodeApp
  redis:
    image: redis:latest
    container_name: redis
    command: redis-server --requirepass root
    ports:
      - "6379:6379"
    networks:
      - nodeApp
volumes:
  mongoData:
  postgresData:
  elasticData:
  rabbitMqData:
networks:
  nodeApp: